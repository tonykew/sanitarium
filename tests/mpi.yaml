#-------------------------------------------------------------------
# OpenMPI Test
#-------------------------------------------------------------------
openmpi:
  summary: A basic OpenMPI test. Uses openmpi module to run supermagic
  schedule:
    nodes: 2
    slurm:
      sbatch_extra: ['--constraint=IB']
  build:
    modules: ['gcc', 'openmpi']
    env:
      CC: mpicc
    source_path: supermagic-1.2.tar.gz
    cmds:
      - ./configure
      - make
  run:
    modules: ['gcc', 'openmpi']
    cmds:
      - '{{sched.test_cmd}} ./supermagic'
  result_parse:
    regex:
      num_tests:
        regex: 'num tests.*: (\\d+)'
      result:
        regex:  '<results> PASSED'
        action: store_true


#-------------------------------------------------------------------
# Intel MPI Test
#-------------------------------------------------------------------
intelmpi:
  summary: A basic Intel MPI test.
  schedule:
    nodes: 2
    slurm:
      sbatch_extra: ['--constraint=IB']
      mpi_cmd: srun
  build:
    modules: ['intel']
    env:
      CC: mpicc
    source_path: supermagic-1.2.tar.gz
    cmds:
      - ./configure
      - make
  run:
    env:
      I_MPI_PMI_LIBRARY: /opt/software/slurm/lib64/libpmi.so
      I_MPI_DEBUG: 4
    modules: ['intel']
    cmds:
      - '{{sched.test_cmd}} ./supermagic'
  result_parse:
    regex:
      num_tests:
        regex: 'num tests.*: (\\d+)'
      result:
        regex:  '<results> PASSED'
        action: store_true

#-------------------------------------------------------------------
# Intel MPI PingPong
#-------------------------------------------------------------------
intelpong:
  summary: Intel MPI PingPong test.
  schedule:
    nodes: 2
    slurm:
      sbatch_extra: ['--constraint=IB']
      mpi_cmd: srun
  run:
    env:
      I_MPI_PMI_LIBRARY: /opt/software/slurm/lib64/libpmi.so
      I_MPI_DEBUG: 4
    modules: ['intel']
    cmds:
      - '{{sched.test_cmd}} IMB-MPI1 PingPong'
  result_parse:
    regex:
      fabric:
        regex: 'libfabric provider: (.+)'
      max_bytes:
        regex: '# Maximum message length in bytes:   (\d+)'
      mbytes_sec:
        regex: '4194304\s+10\s+\d+\.\d+\s+(.+)'
      result:
        regex: '4194304\s+10\s+\d+\.\d+\s+(.+)'
        action: store_true

#-------------------------------------------------------------------
# OpenMPI OSC PingPong
#-------------------------------------------------------------------
osupong:
  summary: OpenMPI OSU PingPong test.
  schedule:
    nodes: 2
    slurm:
      sbatch_extra: ['--constraint=IB', '--ntasks-per-node=1']
  build:
    modules: ['foss']
    env:
      CC: mpicc
      CXX: mpicxx
    source_path: osu-micro-benchmarks-6.0.tar.gz
    cmds:
      - ./configure
      - make
  run:
    modules: ['foss']
    cmds:
      - '{{sched.test_cmd}} c/mpi/pt2pt/osu_latency'
  result_parse:
    regex:
      min_lat:
        regex: '^0\s+(.+)'
      result:
        regex: 'OSU MPI Latency Test'
        action: store_true
  result_evaluate:
    result: 'min_lat < 50'

#-------------------------------------------------------------------
# Parallel MPI I/O Test using HDF5
# NOTE: this currently writes to /vscratch/ccrstaff. Will need to
# adjust this for the testsuite user
#-------------------------------------------------------------------
phdf5:
  summary: A parallel mpi i/o test using HDF5
  schedule:
    nodes: 2
    slurm:
      sbatch_extra: ['--constraint="IB&AVX512"', '--ntasks-per-node=4']
      mpi_cmd: srun
  build:
    modules: ['iimpi', 'hdf5']
    source_path: ph5example.c
    cmds:
      - mpicc -o ph5example ph5example.c -I$EBROOTHDF5/include -I$EBROOTSZIP/include -L$EBROOTHDF5/lib -lhdf5 -LEBROOTSZIP/lib -lsz -Xlinker -rpath=$EBROOTHDF5/lib -Xlinker -rpath=$EBROOTSZIP/lib
  run:
    env:
      I_MPI_PMI_LIBRARY: /opt/software/slurm/lib64/libpmi.so
      I_MPI_DEBUG: 4
      HDF5_DISABLE_VERSION_CHECK: 1
    modules: ['iimpi', 'hdf5']
    cmds:
      - '{{sched.test_cmd}} ./ph5example -f /vscratch/grp-ccradmintest -v'
  result_parse:
    regex:
      result:
        regex:  'PHDF5 example finished with no errors'
        action: store_true
