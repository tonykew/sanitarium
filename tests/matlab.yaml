#-------------------------------------------------------------------
# Matlab Tests
#-------------------------------------------------------------------
license:
  summary: Check Matlab license.
  schedule:
    nodes: 1
    tasks_per_node: 1
  run:
    modules: ['matlab']
    cmds:
      - '{{sched.test_cmd}} matlab -nodisplay -nojvm -batch "disp(license())"'
  result_parse:
    regex:
      matlab_license_number:
        regex:  '^([\d]+)'
      result:
        regex:  '^([\d]+)'
        action: 'store_true'

helloworld:
  summary: Test matlab compiler and runtime.
  schedule:
    nodes: 1
    tasks_per_node: 1
  build:
    timeout: 300
    modules: ['matlab']
    source_path: hello.m
    cmds:
      - mcc -m -R -nodisplay hello.m
  run:
    modules: ['mcr']
    cmds:
      - '{{sched.test_cmd}} ./run_hello.sh $MCRROOT'
  result_parse:
    regex:
      result:
        regex:  'CCR rocks!'
        action: 'store_true'

benchmark:
  summary: A Matlab benchmark.
  schedule:
    nodes: 1
    tasks_per_node: 1
  run:
    modules: ['matlab']
    cmds:
      - '{{sched.test_cmd}} matlab -nodisplay -batch "bench(5)"'
  result_parse:
    regex:
      benchmark_results:
        regex:  '^\s+([\d\.]+)\s+([\d\.]+)\s+([\d\.]+)\s+([\d\.]+)\s+([\d\.]+)\s+([\d\.]+)'
        match_select: 'all'
        action: 'count'
  result_evaluate:
    result: 'benchmark_results == 5'

cosplot:
  summary: A Matlab plotting test.
  schedule:
    nodes: 1
    tasks_per_node: 1
  build:
    timeout: 300
    source_path: cosplot.m
  run:
    modules: ['matlab']
    cmds:
      - '{{sched.test_cmd}} matlab -nodisplay -singleCompThread -batch "cosplot"'
  result_parse:
    regex:
      result:
        regex:  '%%Title: ./matlab_test_plot.ps'
        files: 'matlab_test_plot.ps'
        action: 'store_true'

gpu:
  summary: Test matlab GPU support.
  schedule:
    nodes: 1
    tasks_per_node: 1
    slurm:
      sbatch_extra: ['--gres=gpu:1', '--mem=20G']
  build:
    source_path: gputest.m
  run:
    modules: ['matlab']
    cmds:
      - '{{sched.test_cmd}} matlab -nodisplay -nojvm -batch gputest'
  result_parse:
    regex:
      result:
        regex:  'OK'
        action: 'store_true'
